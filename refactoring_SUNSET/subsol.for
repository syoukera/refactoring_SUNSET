C
C********************************************************************
C
      SUBROUTINE SUBSOL
C
C-----THIS SUBROUTINE HAS 5 ENTRIES, SETDXY, SETRXY, SETGAM,
C-----SOURCE AND SOLMAT, ALL CALLED IN SUBROUTINE SOLPHI.
C
      COMMON         PHI(40,240),PHIOLD(40,240),GAM(40,40),SC(40,40),
     &               SP(40,40),AE(40,40),AW(40,40),AN(40,40),
     &               AS(40,40),SDX(40,40),SDY(40,40)
      DIMENSION U(40,40),V(40,40),PC(40,40),T(40,40),W(40,40),P(40,40)
      EQUIVALENCE    (PHI(1,1),U(1,1)),(PHI(1,41),V(1,1)),
     &               (PHI(1,81),PC(1,1)),(PHI(1,121),T(1,1)),
     &               (PHI(1,161),W(1,1)),(PHI(1,201),P(1,1))
      COMMON/BLOCK0/ NITERT,ITERT,INTPRI,NLUMP,ISCAN,JSCAN,DTIME,
     &               ISOLVE(10),IPRINT(10),
     &               LUMPE(10),LUMPW(10),LUMPN(10),LUMPS(10),
     &               IRMAX,JRMAX,RESMAX
      COMMON/BLOCK1/ NTIMST,ITURB,IRAD,IREAD,NPHI,IPHI,IU,IV,IPC,IT,
     &               IW,IP,NI,NJ,JDIM,IREF,JREF,RENO,GRNO,DIRCOS,PR,
     &               TIME,IFORS(40,40),ALPHA(10),NIM1,NJM1,NIP1,NJP1,
     &               IEND,JEND,ICNTDF
      COMMON/BLOCK2/ X(40),Y(40),XP(40),YP(40),DXP(40),DYP(40),
     &               DXU(40),DYV(40),DX(40),DY(40),DELX(40),DELY(40),
     &               FACX(40),FACY(40),RX(40),RY(40),BIGNO,ZERO
      DIMENSION AP(40,40),AI(40),BI(40),CI(40),DI(40)
C-------------------------------------------------------------------
C
      ENTRY SETDXY
C
C-----STORE CONTROL VOLUME SIZES IN DX AND DY.
C
      IEND=NI
      JEND=NJ
C-----FOR SCALAR-CONTROL VOLUME.
      DO 1100 I=1,IEND
      DX(I)=DXP(I)
 1100 DELX(I)=DXU(I)
      DO 1200 J=1,JEND
      DY(J)=DYP(J)
 1200 DELY(J)=DYV(J)
C-----SET INTERPOLATION FACTORS.
      DO 1700 I=2,IEND
 1700 FACX(I)=0.5*DX(I)/DELX(I)
      DO 1800 J=2,JEND
 1800 FACY(J)=0.5*DY(J)/DELY(J)
C-----FOR U-CONTROL VOLUME.
      IF(IPHI.NE.IU) GO TO 1300
      IEND=NIM1
      DO 1400 I=1,IEND
      FACX(I)=0.5
      DX(I)=DXU(I)
 1400 DELX(I)=DXP(I+1)
C-----FOR V-CONTROL VOLUME.
 1300 IF(IPHI.NE.IV) GO TO 1500
      JEND=NJM1
      DO 1600 J=1,JEND
      FACY(J)=0.5
      DY(J)=DYV(J)
 1600 DELY(J)=DYP(J+1)
 1500 RETURN
C
C---------------------------------------------------------------
      ENTRY SETRXY
C
C-----STORE RN AND RS AND RX IN RY(J), RY(J-1) AND RX(J).
C
C-----FOR PLANE FLOW.
      IF(IRAD.EQ.1) GO TO 2100
      DO 2200 J=1,NJP1
      RX(J)=1.
 2200 RY(J)=1.
      RETURN
C-----FOR AXISYMMETRIC FLOW.
 2100 DO 2400 J=1,NJ
      RY(J)=Y(J)
      IF(IPHI.EQ.IV) RY(J)=YP(J+1)
 2400 IF(J.GT.1) RX(J)=0.5*(RY(J)+RY(J-1))
      RETURN
C
C----------------------------------------------------------------
      ENTRY SETGAM
C
C-----GAMMA SHALL AUTOMATICALLY BE SET EQUAL TO LAMINAR DIFFUSION
C     COEFFICIENT UNLESS SPECIFIED OTHERWISE IN ENTRY GAMAIN WITHIN
C-----USER'S WORKING AREA.
C
      PRLAM=1.
      IF(IPHI.EQ.IT) PRLAM=PR
      DO 3200 I=1,NIP1
      DO 3200 J=1,NJP1
 3200 GAM(I,J)=1./RENO/PRLAM
      CALL GAMAIN
      RETURN
C
C--------------------------------------------------------------
      ENTRY SOURCE
C
C-----THIS ENTRY CALCULATES SOURCE TERMS IN A PARTICULAR TRANSPORT
C     EQUATION, AND CARRIES OUT THE OPERATIONS ASSOCIATED WITH THE
C-----VELOCITY-KNOWN BOUNDARIES.
C
      BIGNO=1.E30
      TSOL=FLOAT(ISOLVE(IT))
      WSOL=FLOAT(ISOLVE(IW))
C---------------  U-SOURCE  ---------------
      IF(IPHI.NE.IU) GO TO 5100
      DO 4100 I=2,IEND
      DO 4100 J=2,JEND
      WP=0.5*(W(I,J)+W(I+1,J))
C-----CONTRIBUTION FROM DIFFUSION.
      GAMP=0.5*(GAM(I,J)+GAM(I+1,J))
      SC(I,J)=SC(I,J)+(GAM(I+1,J)*(U(I+1,J)-U(I,J))/DELX(I)
     &       -GAM(I,J)*(U(I,J)-U(I-1,J))/DELX(I-1))*DY(J)*RX(J)
      GAMN=(1.-FACY(J))*GAMP+0.5*FACY(J)*(GAM(I,J+1)+GAM(I+1,J+1))
      GAMS=FACY(J-1)*GAMP
     &    +0.5*(1.-FACY(J-1))*(GAM(I,J-1)+GAM(I+1,J-1))
      SC(I,J)=SC(I,J)+GAMN*(V(I+1,J)-V(I,J))*RY(J)
     &               -GAMS*(V(I+1,J-1)-V(I,J-1))*RY(J-1)
C-----CONTRIBUTION FROM BUOYANCY.
      SC(I,J)=SC(I,J)+DIRCOS*GRNO/RENO**2*TSOL
     &                *0.5*(T(I+1,J)+T(I,J))*DX(I)*DY(J)*RX(J)
C-----TREAT VELOCITY-KNOWN BOUNDARIES BY EXPLOITING SC AND SP.
      IF(IFORS(I,J).NE.2) GO TO 4110
C-----FOR EAST FACE BOUNDARY.
      IF(IFORS(I+1,J).NE.0) GO TO 4040
      SC(I,J)=BIGNO*U(I,J)
      SP(I,J)=-BIGNO
C-----FOR NORTH FACE BOUNDARY.
 4040 IF(IFORS(I,J+1).NE.0) GO TO 4120
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4045
      UP=((U(I,J)-U(I,J+1))**2
     &    +(WP-0.5*(W(I,J+1)+W(I+1,J+1)))**2*WSOL)**0.5
      GAMP=GAMWAL(UP,DY(J),RENO,1.,IPHI)
 4045 AN(I,J)=ZERO
      F=0.5*(V(I,J)+V(I+1,J))*DX(I)*RY(J)
      A=-F+GAMP/(0.5*DY(J))*DX(I)*RY(J)
      DSP=-AMAX1(A,-F,0.)
      SC(I,J)=SC(I,J)-DSP*U(I,J+1)
      SP(I,J)=SP(I,J)+DSP
C-----FOR SOUTH FACE BOUNDARY.
 4120 IF(IFORS(I,J-1).NE.0) GO TO 4110
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4125
      UP=((U(I,J)-U(I,J-1))**2
     &    +(WP-0.5*(W(I,J-1)+W(I+1,J-1)))**2*WSOL)**0.5
      GAMP=GAMWAL(UP,DY(J),RENO,1.,IPHI)
 4125 AS(I,J)=ZERO
      F=0.5*(V(I,J-1)+V(I+1,J-1))*DX(I)*RY(J-1)
      A=F+GAMP/(0.5*DY(J))*DX(I)*RY(J-1)
      DSP=-AMAX1(A,F,0.)
      SC(I,J)=SC(I,J)-DSP*U(I,J-1)
      SP(I,J)=SP(I,J)+DSP
C-----FOR WEST BOUNDARIES AND IN LUMPS.
 4110 IF(IFORS(I,J).NE.0) GO TO 4100
      SC(I,J)=BIGNO*U(I,J)
      SP(I,J)=-BIGNO
 4100 CONTINUE
      RETURN
C---------------  V-SOURCE  ---------------
 5100 IF(IPHI.NE.IV) GO TO 5200
      DO 4200 I=2,IEND
      DO 4200 J=2,JEND
      WP=0.5*(W(I,J)+W(I,J+1))
C-----CONTRIBUTION FROM DIFFUSION.
      GAMP=0.5*(GAM(I,J)+GAM(I,J+1))
      SC(I,J)=SC(I,J)+(GAM(I,J+1)*RY(J)*(V(I,J+1)-V(I,J))/DELY(J)
     &       -GAM(I,J)*RY(J-1)*(V(I,J)-V(I,J-1))/DELY(J-1))*DX(I)
      GAME=(1.-FACX(I))*GAMP+0.5*FACX(I)*(GAM(I+1,J)+GAM(I+1,J+1))
      GAMW=FACX(I-1)*GAMP
     &    +0.5*(1.-FACX(I-1))*(GAM(I-1,J)+GAM(I-1,J+1))
      SC(I,J)=SC(I,J)+(GAME*(U(I,J+1)-U(I,J))
     &                -GAMW*(U(I-1,J+1)-U(I-1,J)))*RX(J)
C-----FOR THE CYLINDRICAL COORDINATES
      IF(IRAD.NE.1) GO TO 4150
      SP(I,J)=SP(I,J)-2.*GAMP/RX(J)*DX(I)*DY(J)
C-----CONTRIBUTION FROM SWIRL
      SC(I,J)=SC(I,J)+0.25*(W(I,J+1)+W(I,J))**2*DX(I)*DY(J)*WSOL
C-----CONTRIBUTION FROM BUOYANCY.
 4150 SC(I,J)=SC(I,J)+SQRT(1.-DIRCOS**2)*TSOL
     &       *GRNO/RENO**2*0.5*(T(I,J+1)+T(I,J))*DX(I)*DY(J)*RX(J)
C-----TREAT VELOCITY-KNOWN BOUNDARIES BY EXPLOITING SC AND SP.
      IF(IFORS(I,J).NE.2) GO TO 4210
C-----FOR NORTH FACE BOUNDARY.
      IF(IFORS(I,J+1).NE.0) GO TO 4140
      SC(I,J)=BIGNO*V(I,J)
      SP(I,J)=-BIGNO
C-----FOR EAST FACE BOUNDARY.
 4140 IF(IFORS(I+1,J).NE.0) GO TO 4220
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4145
      VP=((V(I,J)-V(I+1,J))**2
     &    +(WP-0.5*(W(I+1,J)+W(I+1,J+1)))**2*WSOL)**0.5
      GAMP=GAMWAL(VP,DX(I),RENO,1.,IPHI)
 4145 AE(I,J)=ZERO
      F=0.5*(U(I,J)+U(I,J+1))*DY(J)*RX(J)
      A=-F+GAMP/(0.5*DX(I))*DY(J)*RX(J)
      DSP=-AMAX1(A,-F,0.)
      SC(I,J)=SC(I,J)-DSP*V(I+1,J)
      SP(I,J)=SP(I,J)+DSP
C-----FOR WEST FACE BOUNDARY.
 4220 IF(IFORS(I-1,J).NE.0) GO TO 4210
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4225
      VP=((V(I,J)-V(I-1,J))**2
     &    +(WP-0.5*(W(I-1,J)+W(I-1,J+1)))**2*WSOL)**0.5
      GAMP=GAMWAL(VP,DX(I),RENO,1.,IPHI)
 4225 AW(I,J)=ZERO
      F=0.5*(U(I-1,J)+U(I-1,J+1))*DY(J)*RX(J)
      A=F+GAMP/(0.5*DX(I))*DY(J)*RX(J)
      DSP=-AMAX1(A,F,0.)
      SC(I,J)=SC(I,J)-DSP*V(I-1,J)
      SP(I,J)=SP(I,J)+DSP
C-----FOR SOUTH BOUNDARIES AND IN LUMPS.
 4210 IF(IFORS(I,J).NE.0) GO TO 4200
      SC(I,J)=BIGNO*V(I,J)
      SP(I,J)=-BIGNO
 4200 CONTINUE
      RETURN
C---------------  PC-SOURCE  --------------
 5200 IF(IPHI.NE.IPC) GO TO 5300
      DO 4300 I=2,IEND
      DO 4300 J=2,JEND
C-----ZERO VELOCITY CORRECTIONS ON VELOCITY-KNOWN BOUNDARIES.
      IF(IFORS(I,J).NE.2) GO TO 4300
      IF(IFORS(I+1,J).EQ.0) AE(I,J)=ZERO
      IF(IFORS(I-1,J).EQ.0) AW(I,J)=ZERO
      IF(IFORS(I,J+1).EQ.0) AN(I,J)=ZERO
      IF(IFORS(I,J-1).EQ.0) AS(I,J)=ZERO
 4300 CONTINUE
C-----ASSUME ZERO PRESSURE CORRECTIONS ON VELOCITY-UNKNOWN BOUNDARIES.
      DO 4310 J=2,JEND
      IF(IFORS(1,J).NE.0) AW(2,J)=AE(2,J)
 4310 IF(IFORS(NIP1,J).NE.0) AE(NI,J)=AW(NI,J)
      DO 4320 I=2,IEND
 4320 IF(IFORS(I,NJP1).NE.0) AN(I,NJ)=AS(I,NJ)
      RETURN
C---------------  OTHER SOURCES ------------
 5300 J0=(IPHI-1)*JDIM
C-----SET LAMINAR PRANDTL NUMBER FOR EACH PHI.
      PRLAM=1.
      IF(IPHI.EQ.IT) PRLAM=PR
      DO 4400 J=2,JEND
      JJ=J0+J
      DO 4400 I=2,IEND
C-----W SOURCE
      IF(IPHI.NE.IW) GO TO 4460
      DGAMDR=(GAM(I,J+1)-GAM(I,J-1))/(YP(J+1)-YP(J-1))+GAM(I,J)/YP(J)
      DSP=-(0.5*(V(I,J)+V(I,J-1))+DGAMDR)*DX(I)*DY(J)
C-----EXPLOIT SC AND SP.
      SC(I,J)=SC(I,J)+AMAX1(DSP,0.)*W(I,J)
      SP(I,J)=SP(I,J)-AMAX1(-DSP,0.)
C-----TREAT VELOCITY-KNOWN BOUNDARIES BY EXPLOITING SC AND SP.
 4460 IF(IFORS(I,J).NE.2) GO TO 4550
      GAMP=GAM(I,J)
      UPP=0.5*(U(I,J)+U(I-1,J))
      VPP=0.5*(V(I,J)+V(I,J-1))
C-----EAST FACE BOUNDARY.
      IF(IFORS(I+1,J).NE.0) GO TO 4430
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4425
      VP=((VPP-0.5*(V(I+1,J)+V(I+1,J-1)))**2
     &    +(W(I,J)-W(I+1,J))**2*WSOL)**0.5
      GAMP=GAMWAL(VP,DX(I),RENO,PRLAM,IPHI)
 4425 AE(I,J)=ZERO
      F=U(I,J)*DY(J)*RX(J)
      A=-F+GAMP/(0.5*DX(I))*DY(J)*RX(J)
      DSP=-AMAX1(A,-F,0.)
      SC(I,J)=SC(I,J)-DSP*PHI(I+1,JJ)
      SP(I,J)=SP(I,J)+DSP
C-----WEST FACE BOUNDARY.
 4430 IF(IFORS(I-1,J).NE.0) GO TO 4450
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4435
      VP=((VPP-0.5*(V(I-1,J)+V(I-1,J-1)))**2
     &    +(W(I,J)-W(I-1,J))**2*WSOL)**0.5
      GAMP=GAMWAL(VP,DX(I),RENO,PRLAM,IPHI)
 4435 AW(I,J)=ZERO
      F=U(I-1,J)*DY(J)*RX(J)
      A=F+GAMP/(0.5*DX(I))*DY(J)*RX(J)
      DSP=-AMAX1(A,F,0.)
      SC(I,J)=SC(I,J)-DSP*PHI(I-1,JJ)
      SP(I,J)=SP(I,J)+DSP
C-----NORTH FACE BOUNDARY.
 4450 IF(IFORS(I,J+1).NE.0) GO TO 4530
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4455
      UP=((UPP-0.5*(U(I,J+1)+U(I-1,J+1)))**2
     &    +(W(I,J)-W(I,J+1))**2*WSOL)**0.5
      GAMP=GAMWAL(UP,DY(J),RENO,PRLAM,IPHI)
 4455 AN(I,J)=ZERO
      F=V(I,J)*DX(I)*RY(J)
      A=-F+GAMP/(0.5*DY(J))*DX(I)*RY(J)
      DSP=-AMAX1(A,-F,0.)
      SC(I,J)=SC(I,J)-DSP*PHI(I,JJ+1)
      SP(I,J)=SP(I,J)+DSP
C-----SOUTH FACE BOUNDARY.
 4530 IF(IFORS(I,J-1).NE.0) GO TO 4550
C-----NEAR-WALL TREATMENT FOR TURBULENT FLOW.
      IF(ITURB.NE.1) GO TO 4535
      UP=((UPP-0.5*(U(I,J-1)+U(I-1,J-1)))**2
     &    +(W(I,J)-W(I,J-1))**2*WSOL)**0.5
      GAMP=GAMWAL(UP,DY(J),RENO,PRLAM,IPHI)
 4535 AS(I,J)=ZERO
      F=V(I,J-1)*DX(I)*RY(J-1)
      A=F+GAMP/(0.5*DY(J))*DX(I)*RY(J-1)
      DSP=-AMAX1(A,F,0.)
      SC(I,J)=SC(I,J)-DSP*PHI(I,JJ-1)
      SP(I,J)=SP(I,J)+DSP
C-----IN LUMPS.
 4550 IF(IFORS(I,J).NE.0) GO TO 4400
      SC(I,J)=BIGNO*PHI(I,JJ)
      SP(I,J)=-BIGNO
 4400 CONTINUE
      RETURN
C
C----------------------------------------------------------------
      ENTRY SOLMAT
C
C-----SOLVE MATRICES BY LINE-BY-LINE ITERATION WITH TDMA.
C
C
      IENDM1=IEND-1
      JENDM1=JEND-1
      J0=(IPHI-1)*JDIM
      DO 6100 J=2,JEND
      JJ=J0+J
      DO 6100 I=2,IEND
C-----SET THE DIAGONAL COMPONENT AP.
      AP(I,J)=AE(I,J)+AW(I,J)+AN(I,J)+AS(I,J)-SP(I,J)
      IF(IPHI.EQ.IPC.OR.NTIMST.EQ.1) GO TO 7000
      DVDT=DX(I)*DY(J)*RX(J)/DTIME
      AP(I,J)=AP(I,J)+DVDT
      SC(I,J)=SC(I,J)+DVDT*PHIOLD(I,JJ)
C-----MODIFY AP AND SC FOR UNDER-RELAXATION.
 7000 AP(I,J)=AP(I,J)/ALPHA(IPHI)
      SC(I,J)=SC(I,J)+(1.-ALPHA(IPHI))*AP(I,J)*PHI(I,JJ)
C-----STORE SDX AND SDY FOR VELOCITY CORRECTION.
      IF(IPHI.EQ.IU) SDX(I,J)=DY(J)*RX(J)/AP(I,J)
 6100 IF(IPHI.EQ.IV) SDY(I,J)=DX(I)*RX(J)/AP(I,J)
C-----SET IDIR AND JDIR TO CONTROL SWEEP DIRECTION.
      IDIR=MOD(ITERT,2)
      JDIR=(ITERT+IDIR)/2
      JDIR=MOD(JDIR,2)
      NRELAX=1
C-----SWEEP PC THREE TIMES MORE THAN THE OTHERS.
      IF(IPHI.EQ.IPC) NRELAX=3
      DO 6200 IRELAX=1,NRELAX
      IF(IDIR.EQ.0) GO TO 6300
C-----COLUMN-BY-COLUMN ITERATION.
 6400 DO 6500 I=2,IEND
      II=I
      IF(JDIR.EQ.0) II=IEND-I+2
      DO 6600 J=2,JEND
      JJ=J0+J
      BI(J-1)=AN(II,J)
      CI(J-1)=AS(II,J)
      DI(J-1)=SC(II,J)+AE(II,J)*PHI(II+1,JJ)+AW(II,J)*PHI(II-1,JJ)
 6600 AI(J-1)=AP(II,J)
      DI(1)=DI(1)+AS(II,2)*PHI(II,J0+1)
      DI(JENDM1)=DI(JENDM1)+AN(II,JEND)*PHI(II,J0+JEND+1)
      CALL THOMAS(JENDM1,AI,BI,CI,DI)
C-----STORE RESULTS IN PHI.
      DO 6500 J=2,JEND
 6500 PHI(II,J0+J)=DI(J-1)
      IF(IDIR.EQ.0) GO TO 6200
C-----LINE-BY-LINE ITERATION.
 6300 DO 7500 J=2,JEND
      JJ=J
      IF(JDIR.EQ.0) JJ=JEND-J+2
      JJJ=J0+JJ
      DO 7600 I=2,IEND
      BI(I-1)=AE(I,JJ)
      CI(I-1)=AW(I,JJ)
      DI(I-1)=SC(I,JJ)+AN(I,JJ)*PHI(I,JJJ+1)+AS(I,JJ)*PHI(I,JJJ-1)
 7600 AI(I-1)=AP(I,JJ)
      DI(1)=DI(1)+AW(2,JJ)*PHI(1,JJJ)
      DI(IENDM1)=DI(IENDM1)+AE(IEND,JJ)*PHI(IEND+1,JJJ)
      CALL THOMAS(IENDM1,AI,BI,CI,DI)
C-----STORE RESULTS IN PHI.
      DO 7500 I=2,IEND
 7500 PHI(I,JJJ)=DI(I-1)
      IF(IDIR.EQ.0) GO TO 6400
 6200 CONTINUE
      RETURN
      END