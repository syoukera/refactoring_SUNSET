C
C*******************************************************************
C
      SUBROUTINE UPDATE
C
C-----THIS SUBROUTINE HAS 2 ENTRIES, CORRECT AND BOUNDS FOR
C-----UPDATING QUANTITIES.
C
      COMMON         PHI(40,240),PHIOLD(40,240),GAM(40,40),SC(40,40),
     &               SP(40,40),AE(40,40),AW(40,40),AN(40,40),
     &               AS(40,40),SDX(40,40),SDY(40,40)
      DIMENSION U(40,40),V(40,40),PC(40,40),T(40,40),W(40,40),P(40,40)
      EQUIVALENCE    (PHI(1,1),U(1,1)),(PHI(1,41),V(1,1)),
     &               (PHI(1,81),PC(1,1)),(PHI(1,121),T(1,1)),
     &               (PHI(1,161),W(1,1)),(PHI(1,201),P(1,1))
      COMMON/BLOCK1/ NTIMST,ITURB,IRAD,IREAD,NPHI,IPHI,IU,IV,IPC,IT,
     &               IW,IP,NI,NJ,JDIM,IREF,JREF,RENO,GRNO,DIRCOS,PR,
     &               TIME,IFORS(40,40),ALPHA(10),NIM1,NJM1,NIP1,NJP1,
     &               IEND,JEND,ICNTDF
      COMMON/BLOCK2/ X(40),Y(40),XP(40),YP(40),DXP(40),DYP(40),
     &               DXU(40),DYV(40),DX(40),DY(40),DELX(40),DELY(40),
     &               FACX(40),FACY(40),RX(40),RY(40),BIGNO,ZERO
C
C---------------------------------------------------------------------
      ENTRY CORREC
C
C-----CORRECT THE VELOCITY AND PRESSURE FIELDS.
      DO 1100 I=2,NI
      DO 1100 J=2,NJ
      U(I,J)=U(I,J)+SDX(I,J)*(PC(I,J)-PC(I+1,J))
      V(I,J)=V(I,J)+SDY(I,J)*(PC(I,J)-PC(I,J+1))
 1100 P(I,J)=P(I,J)+ALPHA(IP)*PC(I,J)
      PREF=P(IREF,JREF)
      DO 1200 I=2,NI
      DO 1200 J=2,NJ
      P(I,J)=P(I,J)-PREF
      IF(IFORS(I,J).EQ.0) P(I,J)=ZERO
 1200 PC(I,J)=ZERO
      RETURN
C
C---------------------------------------------------------------------
      ENTRY BOUNDS
C
C-----THIS ENTRY UPDATES THE VALUES ON VELOCITY-UNKNOWN BOUNDARIES.
C
C-----SET VELOCITIES AT FREE INLET AND OUTLET BOUNDARIES.
      DO 2000 J=2,NJ
C-----EAST AND WEST BOUNDARIES SUBJECTED TO V = 0.
      IF(IFORS(1,J).NE.0) U(1,J)=U(2,J)
 2000 IF(IFORS(NIP1,J).NE.0) U(NI,J)=U(NIM1,J)
C-----NORTH BOUNDARY SUBJECTED TO U = 0.
      FACR=1.
      IF(IRAD.EQ.1) FACR=Y(NJM1)/Y(NJ)
      DO 2100 I=2,NI
 2100 IF(IFORS(I,NJP1).NE.0) V(I,NJ)=FACR*V(I,NJM1)
C-----SET SCALARS AT FREE INLET AND OUTLET BOUNDARIES.
      FACW=DXU(2)/(DXU(2)+DXU(1))
      FACE=DXU(NIM1)/(DXU(NIM1)+DXU(NI))
      FACN=DYV(NJM1)/(DYV(NJM1)+DYV(NJ))
      NPHIP1=NPHI+1
      DO 2200 IPHI=4,NPHIP1
C-----EAST AND WEST BOUNDARIES.
      J0=(IPHI-1)*JDIM
      DO 2250 J=2,NJ
      JJ=J0+J
      IF(IFORS(1,J).NE.0)
     & PHI(1,JJ)=(PHI(2,JJ)-(1.-FACW)*PHI(3,JJ))/FACW
 2250 IF(IFORS(NIP1,J).NE.0)
     & PHI(NIP1,JJ)=(PHI(NI,JJ)-(1.-FACE)*PHI(NIM1,JJ))/FACE
C-----NORTH BOUNDARY.
      JJ=J0+NJ
      DO 2200 I=2,NI
 2200 IF(IFORS(I,NJP1).NE.0)
     & PHI(I,JJ+1)=(PHI(I,JJ)-(1.-FACN)*PHI(I,JJ-1))/FACN
C-----UPDATE VALUES ALONG THE SOUTH BOUNDARY OF SYMMETRY.
      DO 2300 IPHI=1,NPHIP1
      IF(IPHI.EQ.IV.OR.IPHI.EQ.IPC) GO TO 2300
      J0=(IPHI-1)*JDIM
      DO 2350 I=1,NIP1
 2350 IF(IFORS(I,1).NE.0) PHI(I,J0+1)=PHI(I,J0+2)
 2300 CONTINUE
C-----SET ZERO VELOCITIES WITHIN THE VELOCITY-KNOWN FIELD. NO-SLIP
C     CONDITION SHALL BE ASSUMED BY DEFAULT UNLESS NON-ZERO VELOCITY
C-----DISTRIBUTIONS ARE SPECIFIED IN DATAIN THAT FOLLOWS IMMEDIATELY.
      DO 2400 J=2,NJ
      DO 2400 I=2,NIM1
 2400 IF(IFORS(I,J).EQ.0.OR.IFORS(I+1,J).EQ.0) U(I,J)=ZERO
      DO 2450 I=2,NI
      DO 2450 J=2,NJM1
 2450 IF(IFORS(I,J).EQ.0.OR.IFORS(I,J+1).EQ.0) V(I,J)=ZERO
      RETURN
      END